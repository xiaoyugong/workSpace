<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
           http://www.springframework.org/schema/context
       	   http://www.springframework.org/schema/context/spring-context-4.1.xsd
       	   http://www.springframework.org/schema/aop
       	   http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
       	    http://www.springframework.org/schema/tx
       	   http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
       	   ">
<!-- 使用spring注解 -->
	<context:annotation-config />
	<!-- 注解扫描目录 -->
	<context:component-scan base-package="service" />
	<context:component-scan base-package="action" />
	<context:component-scan base-package="dao" />
	<context:component-scan base-package="util" />
	<context:component-scan base-package="model" />
	<context:component-scan base-package="dao.*" />
	
	
	<!-- 设置使用外部文件作为jdbc连接 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<value>classpath:jdbc.properties</value>
		</property>
	</bean>
	
	<bean id="dataSource" destroy-method="close"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
 
 
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描实体类目录 -->
		<property name="packagesToScan"> 
			<list>
				<value>model</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.jdbc.batch_size">50</prop>
				<prop key="hibernate.autoReconnect">true</prop>
				<prop key="hibernate.connection.autocommit">true</prop>
				<!-- <prop key="hibernate.format_sql">true</prop> -->
				<!-- 加上下面这句会报：
					org.hibernate.HibernateException: save is not valid without active transaction错误 -->
			<!-- 	<prop key="hibernate.current_session_context_class">thread</prop>   -->
				<!-- <prop key="hibernate.hbm2ddl.auto">create</prop> -->
			</props>
		</property>	
	</bean>
	
	<bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager" >
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    <aop:config>
		<aop:pointcut id="businessService" expression="execution(* service.*.*(..))" />
		<aop:advisor pointcut-ref="businessService" advice-ref="txAdvice" />
	</aop:config>
	
	<!-- the transactional advice (what 'happens'; see the <aop:advisor/> bean 
		below) -->
	<tx:advice id="txAdvice" transaction-manager="txManager" >
		<!-- the transactional semantics... -->
		<tx:attributes>
			<!-- all methods starting with 'get' are read-only -->
			<tx:method name="get*" read-only="true" />
			<!-- other methods use the default transaction settings (see below) -->
			<tx:method name="*"  propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>	
	</bean>

</beans>
